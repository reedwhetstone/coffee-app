-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.api_keys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  key_hash text NOT NULL UNIQUE,
  name text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  last_used_at timestamp with time zone,
  is_active boolean DEFAULT true,
  permissions jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT api_keys_pkey PRIMARY KEY (id),
  CONSTRAINT api_keys_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_roles(id)
);
CREATE TABLE public.api_usage (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  api_key_id uuid,
  endpoint text NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  response_time_ms integer,
  status_code integer,
  user_agent text,
  ip_address inet,
  CONSTRAINT api_usage_pkey PRIMARY KEY (id),
  CONSTRAINT api_usage_api_key_id_fkey FOREIGN KEY (api_key_id) REFERENCES public.api_keys(id)
);
CREATE TABLE public.artisan_import_log (
  import_id integer NOT NULL DEFAULT nextval('artisan_import_log_import_id_seq'::regclass),
  user_id uuid NOT NULL,
  roast_id integer,
  filename text,
  file_size integer,
  artisan_version text,
  import_timestamp timestamp with time zone DEFAULT now(),
  total_data_points integer,
  processing_status text DEFAULT 'success'::text,
  processing_messages ARRAY,
  original_data jsonb,
  CONSTRAINT artisan_import_log_pkey PRIMARY KEY (import_id)
);
CREATE TABLE public.coffee_catalog (
  id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
  name text NOT NULL,
  score_value numeric,
  arrival_date text,
  region text,
  processing text,
  drying_method text,
  roast_recs text,
  lot_size text,
  bag_size text,
  packaging text,
  cultivar_detail text,
  grade text,
  appearance text,
  description_short text,
  farm_notes text,
  type character varying,
  description_long text,
  link text,
  cost_lb numeric,
  last_updated date,
  source text,
  stocked boolean,
  cupping_notes text,
  unstocked_date date,
  stocked_date date,
  ai_description text,
  ai_tasting_notes jsonb,
  public_coffee boolean DEFAULT true,
  coffee_user uuid,
  country text,
  continent text,
  CONSTRAINT coffee_catalog_pkey PRIMARY KEY (id)
);
CREATE TABLE public.coffee_chunks (
  id text NOT NULL,
  coffee_id integer,
  chunk_type text NOT NULL,
  content text NOT NULL,
  metadata jsonb NOT NULL,
  embedding USER-DEFINED NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coffee_chunks_pkey PRIMARY KEY (id),
  CONSTRAINT coffee_chunks_coffee_id_fkey FOREIGN KEY (coffee_id) REFERENCES public.coffee_catalog(id)
);
CREATE TABLE public.green_coffee_inv (
  id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
  rank integer,
  notes text,
  purchase_date date,
  purchased_qty_lbs integer,
  bean_cost numeric,
  tax_ship_cost numeric,
  last_updated character varying,
  user uuid,
  catalog_id integer,
  stocked boolean DEFAULT true,
  cupping_notes jsonb,
  CONSTRAINT green_coffee_inv_pkey PRIMARY KEY (id),
  CONSTRAINT green_coffee_inv_user_fkey FOREIGN KEY (user) REFERENCES public.user_roles(id),
  CONSTRAINT green_coffee_inv_catalog_id_fkey FOREIGN KEY (catalog_id) REFERENCES public.coffee_catalog(id)
);
CREATE TABLE public.roast_events (
  event_id integer NOT NULL DEFAULT nextval('roast_events_event_id_seq'::regclass),
  roast_id integer NOT NULL,
  time_seconds numeric NOT NULL,
  event_type integer NOT NULL,
  event_value text,
  event_string text,
  category text,
  subcategory text,
  user_generated boolean DEFAULT false,
  automatic boolean DEFAULT true,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roast_events_pkey PRIMARY KEY (event_id),
  CONSTRAINT roast_events_roast_id_fkey FOREIGN KEY (roast_id) REFERENCES public.roast_profiles(roast_id)
);
CREATE TABLE public.roast_profiles (
  roast_id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
  batch_name character varying NOT NULL,
  coffee_id integer NOT NULL,
  coffee_name character varying NOT NULL,
  roast_date date NOT NULL,
  oz_in numeric,
  oz_out numeric,
  roast_notes character varying,
  roast_targets character varying,
  last_updated character varying,
  user uuid,
  roaster_type text,
  roaster_size numeric,
  roast_uuid text,
  temperature_unit text DEFAULT 'F'::text,
  charge_time numeric,
  dry_end_time numeric,
  fc_start_time numeric,
  fc_end_time numeric,
  sc_start_time numeric,
  drop_time numeric,
  cool_time numeric,
  charge_temp numeric,
  dry_end_temp numeric,
  fc_start_temp numeric,
  fc_end_temp numeric,
  sc_start_temp numeric,
  drop_temp numeric,
  cool_temp numeric,
  dry_percent numeric,
  maillard_percent numeric,
  development_percent numeric,
  total_roast_time numeric,
  data_source text DEFAULT 'manual'::text,
  chart_z_max numeric,
  chart_z_min numeric,
  chart_y_max numeric,
  chart_y_min numeric,
  chart_x_max numeric,
  chart_x_min numeric,
  tp_time numeric,
  tp_temp numeric,
  dry_phase_ror numeric,
  mid_phase_ror numeric,
  finish_phase_ror numeric,
  total_ror numeric,
  auc numeric,
  weight_loss_percent numeric,
  dry_phase_delta_temp numeric,
  CONSTRAINT roast_profiles_pkey PRIMARY KEY (roast_id),
  CONSTRAINT roast_profiles_user_fkey FOREIGN KEY (user) REFERENCES public.user_roles(id),
  CONSTRAINT roast_profiles_coffee_id_fkey FOREIGN KEY (coffee_id) REFERENCES public.green_coffee_inv(id)
);
CREATE TABLE public.roast_temperatures (
  temp_id bigint NOT NULL DEFAULT nextval('roast_temperatures_temp_id_seq'::regclass),
  roast_id integer NOT NULL,
  time_seconds numeric NOT NULL,
  bean_temp numeric,
  environmental_temp numeric,
  ambient_temp numeric,
  inlet_temp numeric,
  ror_bean_temp numeric,
  data_source text DEFAULT 'live'::text CHECK (data_source = ANY (ARRAY['live'::text, 'artisan_import'::text, 'manual'::text])),
  data_quality text DEFAULT 'good'::text CHECK (data_quality = ANY (ARRAY['good'::text, 'interpolated'::text, 'estimated'::text, 'poor'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT roast_temperatures_pkey PRIMARY KEY (temp_id),
  CONSTRAINT roast_temperatures_roast_id_fkey FOREIGN KEY (roast_id) REFERENCES public.roast_profiles(roast_id)
);
CREATE TABLE public.role_audit_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  old_role text,
  new_role text NOT NULL,
  trigger_type text NOT NULL CHECK (trigger_type = ANY (ARRAY['checkout_success'::text, 'webhook_processing'::text, 'manual_verification'::text, 'admin_change'::text])),
  stripe_customer_id text,
  stripe_subscription_id text,
  session_id text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT role_audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.sales (
  id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
  green_coffee_inv_id integer NOT NULL,
  oz_sold integer NOT NULL,
  price numeric NOT NULL,
  buyer character varying NOT NULL,
  batch_name text,
  sell_date date NOT NULL,
  purchase_date date NOT NULL,
  user uuid,
  CONSTRAINT sales_pkey PRIMARY KEY (id),
  CONSTRAINT sales_green_coffee_inv_id_fkey FOREIGN KEY (green_coffee_inv_id) REFERENCES public.green_coffee_inv(id),
  CONSTRAINT sales_user_fkey FOREIGN KEY (user) REFERENCES public.user_roles(id)
);
CREATE TABLE public.shared_links (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  share_token text NOT NULL UNIQUE,
  resource_type text NOT NULL,
  resource_id text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  CONSTRAINT shared_links_pkey PRIMARY KEY (id),
  CONSTRAINT shared_links_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.stripe_customers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  customer_id text NOT NULL UNIQUE,
  email text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stripe_customers_pkey PRIMARY KEY (id),
  CONSTRAINT stripe_customers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.stripe_session_processing (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  session_id text NOT NULL,
  user_id uuid NOT NULL,
  status text NOT NULL CHECK (status = ANY (ARRAY['processing'::text, 'completed'::text, 'failed'::text])),
  role_updated boolean DEFAULT false,
  error_message text,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT stripe_session_processing_pkey PRIMARY KEY (id),
  CONSTRAINT stripe_session_processing_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL,
  role USER-DEFINED NOT NULL DEFAULT 'viewer'::user_role,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  email text,
  name text,
  user_role ARRAY NOT NULL DEFAULT '{viewer}'::text[],
  CONSTRAINT user_roles_pkey PRIMARY KEY (id),
  CONSTRAINT user_roles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);